# 工作流程的名稱
name: Deploy to Firebase Hosting via GitHub Actions

# 定義觸發事件：當有程式碼推送到 main 分支時
on:
  push:
    # 當有程式碼推送到 main 分支時觸發這個工作流程
    branches:
      - main # 假設你的主要開發分支是 main

jobs:
  build_and_deploy:
    # 運行在最新的 Ubuntu 虛擬機上
    runs-on: ubuntu-latest

    # 任務步驟
    steps:
      # 步驟 1: 拉取 GitHub 儲存庫的程式碼到虛擬機中
      - name: Checkout code
        uses: actions/checkout@v4

      # 步驟 2: 設置 Java 環境 (Flutter 建置需要)
      # 根據你使用的 Flutter 版本，可能需要特定的 Java 版本
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17' # 通常較新的 Flutter 版本需要 Java 11 或更高

      # 步驟 3: 設置 Flutter SDK 環境
      # subosito/flutter-action 是一個非常方便的 Action，用於設置 Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # 指定要使用的 Flutter 版本 (例如 '3.x' 表示最新的 3.x 穩定版)
          channel: 'stable'      # 使用 stable 渠道

      # 步驟 4: 設置 Node.js 環境 (Firebase CLI Action 內部需要)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 使用推薦的 LTS 版本

      # 步驟 5: 獲取 Flutter 專案依賴
      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: ./salary_calculator # <--- 已替換

      # 步驟 6: 建置 Flutter Web 應用程式
      - name: Build Flutter Web
        run: flutter build web --release # 生成發布版本文件
        working-directory: ./salary_calculator # <--- 已替換

      # 步驟 7: 部署到 Firebase Hosting 使用官方 Action
      # 這個 Action 會在內部處理安裝和執行 Firebase CLI
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0 # 使用官方部署 Action 的 v0 版本
        with:
          # repoToken 是 GitHub Actions 內建的 Token
          repoToken: ${{ secrets.GITHUB_TOKEN }}
         # <--- 使用服務帳戶密鑰進行身份驗證 ---
          # firebaseServiceAccount 參數用於傳遞服務帳戶密鑰的 JSON 內容
          # 指向你在 GitHub Secret 中創建的那個 Secret 的名稱
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }} # <-- 將這裡替換成你在 GitHub Secrets 中設定的名稱

          # 明確指定要部署的 Firebase 專案 ID
          projectId: 'salary-calculator-0001' # <--- 將這裡替換成你在 Google Cloud Console/Firebase Console 中看到的實際專案 ID

          # <--- 在這裡新增 entryPoint 參數！
          entryPoint: ./salary_calculator 
          # projectId: '你的專案ID'
          # 可選：指定部署到哪個渠道，'live' 是默認的主要 URL
          channelId: live

        # <--- 在這裡添加 working-directory 屬性！
        # 這會讓 FirebaseExtended/action-hosting-deploy 這個 Action 在指定目錄中執行
        # working-directory: ./salary_calculator # <--- 已替換